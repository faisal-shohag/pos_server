// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Admin {
  id         String       @id @default(uuid())
  name       String?
  email      String    @unique
  phone      String?
  password   String
  created_at DateTime  @default(now())
}

model Staff {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String
  phone      String      
  created_at DateTime  @default(now())
  shop      Shop @relation(fields: [shopId], references: [id], onDelete: Cascade)
  shopId Int @unique     
  isPermited Boolean   @default(false)
}


model Shop {
  id        Int       @id @default(autoincrement())
  name      String
  address   String
  staff     Staff?
  products  ProductsOnShops[]
}

model Product {
  id           Int         @id @default(autoincrement())
  barCode      String @unique
  name         String
  category     Categories @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId   Int 
  count        Int         @default(0)
  price        Float         @default(0.0)
  discount     Float         @default(0.0)
  brand        String
  image        Bytes
  shops        ProductsOnShops[]        
}

model ProductsOnShops {
  shop Shop @relation(fields: [shopId], references: [id])
  shopId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  @@id([shopId, productId])
}


model Categories {
  id Int  @id @default(autoincrement())
  name String
  created_at DateTime @default(now())
  product Product[]
}